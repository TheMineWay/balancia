/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const SysLazyRouteImport = createFileRoute('/sys')()
const IndexLazyRouteImport = createFileRoute('/')()
const SysIndexLazyRouteImport = createFileRoute('/sys/')()
const SysRoleIndexLazyRouteImport = createFileRoute('/sys/role/')()
const FinancesTransactionsIndexLazyRouteImport = createFileRoute(
  '/finances/transactions/',
)()
const FinancesCategoriesIndexLazyRouteImport = createFileRoute(
  '/finances/categories/',
)()
const FinancesAccountsIndexLazyRouteImport = createFileRoute(
  '/finances/accounts/',
)()

const SysLazyRoute = SysLazyRouteImport.update({
  id: '/sys',
  path: '/sys',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sys.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const SysIndexLazyRoute = SysIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SysLazyRoute,
} as any).lazy(() => import('./routes/sys/index.lazy').then((d) => d.Route))
const SysRoleIndexLazyRoute = SysRoleIndexLazyRouteImport.update({
  id: '/role/',
  path: '/role/',
  getParentRoute: () => SysLazyRoute,
} as any).lazy(() =>
  import('./routes/sys/role/index.lazy').then((d) => d.Route),
)
const FinancesTransactionsIndexLazyRoute =
  FinancesTransactionsIndexLazyRouteImport.update({
    id: '/finances/transactions/',
    path: '/finances/transactions/',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/finances/transactions/index.lazy').then((d) => d.Route),
  )
const FinancesCategoriesIndexLazyRoute =
  FinancesCategoriesIndexLazyRouteImport.update({
    id: '/finances/categories/',
    path: '/finances/categories/',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/finances/categories/index.lazy').then((d) => d.Route),
  )
const FinancesAccountsIndexLazyRoute =
  FinancesAccountsIndexLazyRouteImport.update({
    id: '/finances/accounts/',
    path: '/finances/accounts/',
    getParentRoute: () => rootRouteImport,
  } as any).lazy(() =>
    import('./routes/finances/accounts/index.lazy').then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/sys': typeof SysLazyRouteWithChildren
  '/sys/': typeof SysIndexLazyRoute
  '/finances/accounts': typeof FinancesAccountsIndexLazyRoute
  '/finances/categories': typeof FinancesCategoriesIndexLazyRoute
  '/finances/transactions': typeof FinancesTransactionsIndexLazyRoute
  '/sys/role': typeof SysRoleIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/sys': typeof SysIndexLazyRoute
  '/finances/accounts': typeof FinancesAccountsIndexLazyRoute
  '/finances/categories': typeof FinancesCategoriesIndexLazyRoute
  '/finances/transactions': typeof FinancesTransactionsIndexLazyRoute
  '/sys/role': typeof SysRoleIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/sys': typeof SysLazyRouteWithChildren
  '/sys/': typeof SysIndexLazyRoute
  '/finances/accounts/': typeof FinancesAccountsIndexLazyRoute
  '/finances/categories/': typeof FinancesCategoriesIndexLazyRoute
  '/finances/transactions/': typeof FinancesTransactionsIndexLazyRoute
  '/sys/role/': typeof SysRoleIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sys'
    | '/sys/'
    | '/finances/accounts'
    | '/finances/categories'
    | '/finances/transactions'
    | '/sys/role'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sys'
    | '/finances/accounts'
    | '/finances/categories'
    | '/finances/transactions'
    | '/sys/role'
  id:
    | '__root__'
    | '/'
    | '/sys'
    | '/sys/'
    | '/finances/accounts/'
    | '/finances/categories/'
    | '/finances/transactions/'
    | '/sys/role/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  SysLazyRoute: typeof SysLazyRouteWithChildren
  FinancesAccountsIndexLazyRoute: typeof FinancesAccountsIndexLazyRoute
  FinancesCategoriesIndexLazyRoute: typeof FinancesCategoriesIndexLazyRoute
  FinancesTransactionsIndexLazyRoute: typeof FinancesTransactionsIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sys': {
      id: '/sys'
      path: '/sys'
      fullPath: '/sys'
      preLoaderRoute: typeof SysLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sys/': {
      id: '/sys/'
      path: '/'
      fullPath: '/sys/'
      preLoaderRoute: typeof SysIndexLazyRouteImport
      parentRoute: typeof SysLazyRoute
    }
    '/sys/role/': {
      id: '/sys/role/'
      path: '/role'
      fullPath: '/sys/role'
      preLoaderRoute: typeof SysRoleIndexLazyRouteImport
      parentRoute: typeof SysLazyRoute
    }
    '/finances/transactions/': {
      id: '/finances/transactions/'
      path: '/finances/transactions'
      fullPath: '/finances/transactions'
      preLoaderRoute: typeof FinancesTransactionsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/finances/categories/': {
      id: '/finances/categories/'
      path: '/finances/categories'
      fullPath: '/finances/categories'
      preLoaderRoute: typeof FinancesCategoriesIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/finances/accounts/': {
      id: '/finances/accounts/'
      path: '/finances/accounts'
      fullPath: '/finances/accounts'
      preLoaderRoute: typeof FinancesAccountsIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface SysLazyRouteChildren {
  SysIndexLazyRoute: typeof SysIndexLazyRoute
  SysRoleIndexLazyRoute: typeof SysRoleIndexLazyRoute
}

const SysLazyRouteChildren: SysLazyRouteChildren = {
  SysIndexLazyRoute: SysIndexLazyRoute,
  SysRoleIndexLazyRoute: SysRoleIndexLazyRoute,
}

const SysLazyRouteWithChildren =
  SysLazyRoute._addFileChildren(SysLazyRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  SysLazyRoute: SysLazyRouteWithChildren,
  FinancesAccountsIndexLazyRoute: FinancesAccountsIndexLazyRoute,
  FinancesCategoriesIndexLazyRoute: FinancesCategoriesIndexLazyRoute,
  FinancesTransactionsIndexLazyRoute: FinancesTransactionsIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
